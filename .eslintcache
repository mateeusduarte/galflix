[{"/Users/mateusduarte/Desktop/galflix/galflix/src/App.js":"1","/Users/mateusduarte/Desktop/galflix/galflix/src/Pages/HomePage/styled-HomePage.js":"2","/Users/mateusduarte/Desktop/galflix/galflix/src/Pages/HomePage/HomePage.js":"3","/Users/mateusduarte/Desktop/galflix/galflix/src/Components/CardMoviesHome/CardMoviesHome.js":"4","/Users/mateusduarte/Desktop/galflix/galflix/src/Components/CardMoviesHome/styled-CardMoviesHome.js":"5","/Users/mateusduarte/Desktop/galflix/galflix/src/Global/GlobalStateContext.js":"6","/Users/mateusduarte/Desktop/galflix/galflix/src/Global/GlobalState.js":"7","/Users/mateusduarte/Desktop/galflix/galflix/src/Pages/MoviePage/MoviePage.js":"8","/Users/mateusduarte/Desktop/galflix/galflix/src/Pages/MoviePage/styled-MoviePage.js":"9","/Users/mateusduarte/Desktop/galflix/galflix/src/index.js":"10","/Users/mateusduarte/Desktop/galflix/galflix/src/Router/Coordinator.js":"11","/Users/mateusduarte/Desktop/galflix/galflix/src/Router/Router.js":"12"},{"size":221,"mtime":1606906098000,"results":"13","hashOfConfig":"14"},{"size":1049,"mtime":1606907171000,"results":"15","hashOfConfig":"14"},{"size":2220,"mtime":1606871583000,"results":"16","hashOfConfig":"14"},{"size":473,"mtime":1606906098000,"results":"17","hashOfConfig":"14"},{"size":1260,"mtime":1606906098000,"results":"18","hashOfConfig":"14"},{"size":114,"mtime":1606778868000,"results":"19","hashOfConfig":"14"},{"size":3450,"mtime":1606871583000,"results":"20","hashOfConfig":"14"},{"size":2725,"mtime":1606906099000,"results":"21","hashOfConfig":"14"},{"size":1637,"mtime":1606906099000,"results":"22","hashOfConfig":"14"},{"size":500,"mtime":1606906099000,"results":"23","hashOfConfig":"14"},{"size":362,"mtime":1606871583000,"results":"24","hashOfConfig":"14"},{"size":474,"mtime":1606906099000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a18620",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mateusduarte/Desktop/galflix/galflix/src/App.js",[],"/Users/mateusduarte/Desktop/galflix/galflix/src/Pages/HomePage/styled-HomePage.js",[],"/Users/mateusduarte/Desktop/galflix/galflix/src/Pages/HomePage/HomePage.js",["52","53","54","55","56"],"/Users/mateusduarte/Desktop/galflix/galflix/src/Components/CardMoviesHome/CardMoviesHome.js",[],"/Users/mateusduarte/Desktop/galflix/galflix/src/Components/CardMoviesHome/styled-CardMoviesHome.js",[],"/Users/mateusduarte/Desktop/galflix/galflix/src/Global/GlobalStateContext.js",[],"/Users/mateusduarte/Desktop/galflix/galflix/src/Global/GlobalState.js",["57","58","59","60"],"/Users/mateusduarte/Desktop/galflix/galflix/src/Pages/MoviePage/MoviePage.js",["61","62","63","64","65","66"],"import {\n  FlexCastGenreDirector,\n  FlexContent,\n  FlexDateTime,\n  FlexRate,\n  InfoContainer,\n  MoviePageContainer,\n  PlotContainer,\n  TitleContainer,\n  BackIcon,\n} from \"./styled-MoviePage\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useContext, useEffect } from \"react\";\nimport GlobalStateContext from \"../../Global/GlobalStateContext\";\nimport goBackIcon from \"../../Assets/goBackIcon.svg\";\nimport { goBack } from \"../../Router/Coordinator\";\n\nexport function MoviePage() {\n  const history = useHistory();\n  const pathParams = useParams();\n  const { states, requests, functions } = useContext(GlobalStateContext);\n\n  useEffect(() => {\n    // Requisição para renderizar detalhes do filme na tela\n    requests.getMovieById(pathParams.id);\n  }, []);\n\n  return (\n    <MoviePageContainer>\n      <FlexContent>\n        <BackIcon>\n          <img src={goBackIcon} onClick={() => goBack(history)} />\n        </BackIcon>\n        <FlexDateTime>\n          <p>{states.movieDetail.Runtime}</p>\n          <p>{states.movieDetail.Year}</p>\n        </FlexDateTime>\n        <TitleContainer>\n          <h1>{states.movieDetail.Title}</h1>\n        </TitleContainer>\n        <FlexRate>\n          <div>\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/1200px-IMDB_Logo_2016.svg.png\" />\n            <p>\n              {states.movieDetail.Ratings\n                ? states.movieDetail.Ratings[0]\n                  ? states.movieDetail.Ratings[0].Value\n                  : \"None\"\n                : \"None\"}\n            </p>\n          </div>\n          <div>\n            <img src=\"https://pbs.twimg.com/profile_images/1145693812464816128/9ZMAMaoT_400x400.png\" />\n            <p>\n              {states.movieDetail.Ratings\n                ? states.movieDetail.Ratings[1]\n                  ? states.movieDetail.Ratings[1].Value\n                  : \"None\"\n                : \"None\"}\n            </p>\n          </div>\n          <div>{functions.renderLikedHeart(pathParams.id)}</div>\n        </FlexRate>\n        <PlotContainer>\n          <p>\n            <strong>Enredo</strong>\n            <br></br>\n            <br></br>\n            {states.movieDetail.Plot}\n          </p>\n        </PlotContainer>\n        <FlexCastGenreDirector>\n          <div>\n            <h3>Cast</h3>\n            <p>{states.movieDetail.Actors}</p>\n          </div>\n          <div>\n            <h3>Genre</h3>\n            <p>{states.movieDetail.Genre}</p>\n          </div>\n          <div>\n            <h3>Diretor</h3>\n            <p>{states.movieDetail.Director}</p>\n          </div>\n        </FlexCastGenreDirector>\n      </FlexContent>\n      <img src={states.movieDetail.Poster} />\n    </MoviePageContainer>\n  );\n}\n",["67","68"],"/Users/mateusduarte/Desktop/galflix/galflix/src/Pages/MoviePage/styled-MoviePage.js",[],"/Users/mateusduarte/Desktop/galflix/galflix/src/index.js",[],"/Users/mateusduarte/Desktop/galflix/galflix/src/Router/Coordinator.js",[],"/Users/mateusduarte/Desktop/galflix/galflix/src/Router/Router.js",[],{"ruleId":"69","severity":1,"message":"70","line":16,"column":10,"nodeType":"71","endLine":16,"endColumn":32,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":23,"column":17,"nodeType":"75","endLine":23,"endColumn":37},{"ruleId":"76","severity":1,"message":"77","line":25,"column":17,"nodeType":"75","endLine":25,"endColumn":57},{"ruleId":"78","severity":1,"message":"79","line":30,"column":44,"nodeType":"80","messageId":"81","endLine":30,"endColumn":46},{"ruleId":"73","severity":1,"message":"74","line":44,"column":17,"nodeType":"75","endLine":44,"endColumn":77},{"ruleId":"78","severity":1,"message":"82","line":59,"column":30,"nodeType":"80","messageId":"83","endLine":59,"endColumn":32},{"ruleId":"78","severity":1,"message":"82","line":77,"column":34,"nodeType":"80","messageId":"83","endLine":77,"endColumn":36},{"ruleId":"73","severity":1,"message":"74","line":84,"column":11,"nodeType":"75","endLine":84,"endColumn":85},{"ruleId":"73","severity":1,"message":"74","line":89,"column":11,"nodeType":"75","endLine":89,"endColumn":86},{"ruleId":"84","severity":1,"message":"85","line":6,"column":3,"nodeType":"86","messageId":"87","endLine":6,"endColumn":16},{"ruleId":"69","severity":1,"message":"88","line":26,"column":6,"nodeType":"71","endLine":26,"endColumn":8,"suggestions":"89"},{"ruleId":"73","severity":1,"message":"74","line":32,"column":11,"nodeType":"75","endLine":32,"endColumn":67},{"ruleId":"73","severity":1,"message":"74","line":43,"column":13,"nodeType":"75","endLine":43,"endColumn":133},{"ruleId":"73","severity":1,"message":"74","line":53,"column":13,"nodeType":"75","endLine":53,"endColumn":104},{"ruleId":"73","severity":1,"message":"74","line":87,"column":7,"nodeType":"75","endLine":87,"endColumn":46},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requests'. Either include it or remove the dependency array.","ArrayExpression",["94"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-unused-vars","'InfoContainer' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'pathParams.id' and 'requests'. Either include them or remove the dependency array.",["95"],"no-native-reassign",["96"],"no-negated-in-lhs",["97"],{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [requests, states.searchedMovie]",{"range":"102","text":"103"},"Update the dependencies array to be: [pathParams.id, requests]",{"range":"104","text":"105"},[773,795],"[requests, states.searchedMovie]",[767,769],"[pathParams.id, requests]"]